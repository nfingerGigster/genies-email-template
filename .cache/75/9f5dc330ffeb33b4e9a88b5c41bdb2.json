{"id":"node_modules/opentype.js/src/check.js","dependencies":[{"name":"/Users/natefinger/gigster/genies/genies-email-signature/package.json","includedInParent":true,"mtime":1634175183958},{"name":"/Users/natefinger/gigster/genies/genies-email-signature/node_modules/opentype.js/package.json","includedInParent":true,"mtime":1634175183248},{"name":"/Users/natefinger/gigster/genies/genies-email-signature/node_modules/opentype.js/.babelrc","includedInParent":true,"mtime":1634175183248}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fail = fail;\nexports.assert = exports.argument = argument;\nexports.default = void 0;\n\n// Run-time checking of preconditions.\nfunction fail(message) {\n  throw new Error(message);\n} // Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\n\n\nfunction argument(predicate, message) {\n  if (!predicate) {\n    fail(message);\n  }\n}\n\nvar _default = {\n  fail,\n  argument,\n  assert: argument\n};\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":10,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":3,"column":0}},{"name":"fail","generated":{"line":11,"column":9},"source":"node_modules/opentype.js/src/check.js","original":{"line":3,"column":9}},{"generated":{"line":11,"column":13},"source":"node_modules/opentype.js/src/check.js","original":{"line":3,"column":0}},{"name":"message","generated":{"line":11,"column":14},"source":"node_modules/opentype.js/src/check.js","original":{"line":3,"column":14}},{"generated":{"line":11,"column":21},"source":"node_modules/opentype.js/src/check.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":23},"source":"node_modules/opentype.js/src/check.js","original":{"line":3,"column":23}},{"generated":{"line":12,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":4}},{"generated":{"line":12,"column":8},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":10}},{"name":"Error","generated":{"line":12,"column":12},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":14}},{"generated":{"line":12,"column":17},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":10}},{"name":"message","generated":{"line":12,"column":18},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":20}},{"generated":{"line":12,"column":25},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":10}},{"generated":{"line":12,"column":26},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":4}},{"generated":{"line":13,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":5,"column":1}},{"generated":{"line":13,"column":2},"source":"node_modules/opentype.js/src/check.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":8,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":0}},{"name":"argument","generated":{"line":17,"column":9},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":9}},{"generated":{"line":17,"column":17},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":0}},{"name":"predicate","generated":{"line":17,"column":18},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":18}},{"generated":{"line":17,"column":27},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":0}},{"name":"message","generated":{"line":17,"column":29},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":29}},{"generated":{"line":17,"column":36},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":38},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":38}},{"generated":{"line":18,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":10,"column":4}},{"generated":{"line":18,"column":6},"source":"node_modules/opentype.js/src/check.js","original":{"line":10,"column":8}},{"name":"predicate","generated":{"line":18,"column":7},"source":"node_modules/opentype.js/src/check.js","original":{"line":10,"column":9}},{"generated":{"line":18,"column":16},"source":"node_modules/opentype.js/src/check.js","original":{"line":10,"column":4}},{"generated":{"line":18,"column":18},"source":"node_modules/opentype.js/src/check.js","original":{"line":10,"column":20}},{"name":"fail","generated":{"line":19,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":11,"column":8}},{"name":"fail","generated":{"line":19,"column":4},"source":"node_modules/opentype.js/src/check.js","original":{"line":11,"column":8}},{"generated":{"line":19,"column":8},"source":"node_modules/opentype.js/src/check.js","original":{"line":11,"column":12}},{"name":"message","generated":{"line":19,"column":9},"source":"node_modules/opentype.js/src/check.js","original":{"line":11,"column":13}},{"generated":{"line":19,"column":16},"source":"node_modules/opentype.js/src/check.js","original":{"line":11,"column":12}},{"generated":{"line":19,"column":17},"source":"node_modules/opentype.js/src/check.js","original":{"line":11,"column":8}},{"generated":{"line":20,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":12,"column":5}},{"generated":{"line":21,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":13,"column":1}},{"generated":{"line":23,"column":15},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":15}},{"name":"fail","generated":{"line":24,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":17}},{"name":"fail","generated":{"line":24,"column":2},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":17}},{"generated":{"line":24,"column":6},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":15}},{"name":"argument","generated":{"line":25,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":23}},{"name":"argument","generated":{"line":25,"column":2},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":23}},{"generated":{"line":25,"column":10},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":15}},{"name":"assert","generated":{"line":26,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":33}},{"name":"assert","generated":{"line":26,"column":2},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":33}},{"generated":{"line":26,"column":8},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":39}},{"name":"argument","generated":{"line":26,"column":10},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":41}},{"generated":{"line":27,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":15}}],"sources":{"node_modules/opentype.js/src/check.js":"// Run-time checking of preconditions.\n\nfunction fail(message) {\n    throw new Error(message);\n}\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nfunction argument(predicate, message) {\n    if (!predicate) {\n        fail(message);\n    }\n}\n\nexport { fail, argument, argument as assert };\nexport default { fail, argument, assert: argument };\n"},"lineCount":null}},"error":null,"hash":"30e9433f60b882c8c793d19bd25e3d77","cacheData":{"env":{}}}