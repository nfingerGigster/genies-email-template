{"id":"node_modules/opentype.js/src/char.js","dependencies":[{"name":"/Users/natefinger/gigster/genies/genies-email-signature/package.json","includedInParent":true,"mtime":1634175183958},{"name":"/Users/natefinger/gigster/genies/genies-email-signature/node_modules/opentype.js/package.json","includedInParent":true,"mtime":1634175183248},{"name":"/Users/natefinger/gigster/genies/genies-email-signature/node_modules/opentype.js/.babelrc","includedInParent":true,"mtime":1634175183248}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isArabicChar = isArabicChar;\nexports.isIsolatedArabicChar = isIsolatedArabicChar;\nexports.isTashkeelArabicChar = isTashkeelArabicChar;\nexports.isWhiteSpace = isWhiteSpace;\n\n// ╭─┄┄┄────────────────────────┄─────────────────────────────────────────────╮\n// ┊ Character Class Assertions ┊ Checks if a char belongs to a certain class ┊\n// ╰─╾──────────────────────────┄─────────────────────────────────────────────╯\n// jscs:disable maximumLineLength\n\n/**\n * Check if a char is Arabic\n * @param {string} c a single char\n */\nfunction isArabicChar(c) {\n  return /[\\u0600-\\u065F\\u066A-\\u06D2\\u06FA-\\u06FF]/.test(c);\n}\n/**\n * Check if a char is an isolated arabic char\n * @param {string} c a single char\n */\n\n\nfunction isIsolatedArabicChar(char) {\n  return /[\\u0630\\u0690\\u0621\\u0631\\u0661\\u0671\\u0622\\u0632\\u0672\\u0692\\u06C2\\u0623\\u0673\\u0693\\u06C3\\u0624\\u0694\\u06C4\\u0625\\u0675\\u0695\\u06C5\\u06E5\\u0676\\u0696\\u06C6\\u0627\\u0677\\u0697\\u06C7\\u0648\\u0688\\u0698\\u06C8\\u0689\\u0699\\u06C9\\u068A\\u06CA\\u066B\\u068B\\u06CB\\u068C\\u068D\\u06CD\\u06FD\\u068E\\u06EE\\u06FE\\u062F\\u068F\\u06CF\\u06EF]/.test(char);\n}\n/**\n * Check if a char is an Arabic Tashkeel char\n * @param {string} c a single char\n */\n\n\nfunction isTashkeelArabicChar(char) {\n  return /[\\u0600-\\u0605\\u060C-\\u060E\\u0610-\\u061B\\u061E\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED]/.test(char);\n}\n/**\n * Check if a char is whitespace char\n * @param {string} c a single char\n */\n\n\nfunction isWhiteSpace(c) {\n  return /\\s/.test(c);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":11,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":9,"column":7}},{"name":"isArabicChar","generated":{"line":20,"column":9},"source":"node_modules/opentype.js/src/char.js","original":{"line":9,"column":16}},{"generated":{"line":20,"column":21},"source":"node_modules/opentype.js/src/char.js","original":{"line":9,"column":7}},{"name":"c","generated":{"line":20,"column":22},"source":"node_modules/opentype.js/src/char.js","original":{"line":9,"column":29}},{"generated":{"line":20,"column":23},"source":"node_modules/opentype.js/src/char.js","original":{"line":9,"column":7}},{"generated":{"line":20,"column":25},"source":"node_modules/opentype.js/src/char.js","original":{"line":9,"column":32}},{"generated":{"line":21,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":10,"column":4}},{"generated":{"line":21,"column":9},"source":"node_modules/opentype.js/src/char.js","original":{"line":10,"column":11}},{"name":"test","generated":{"line":21,"column":53},"source":"node_modules/opentype.js/src/char.js","original":{"line":10,"column":55}},{"generated":{"line":21,"column":57},"source":"node_modules/opentype.js/src/char.js","original":{"line":10,"column":11}},{"name":"c","generated":{"line":21,"column":58},"source":"node_modules/opentype.js/src/char.js","original":{"line":10,"column":60}},{"generated":{"line":21,"column":59},"source":"node_modules/opentype.js/src/char.js","original":{"line":10,"column":11}},{"generated":{"line":21,"column":60},"source":"node_modules/opentype.js/src/char.js","original":{"line":10,"column":4}},{"generated":{"line":22,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":11,"column":1}},{"generated":{"line":23,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":13,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":14,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":15,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":17,"column":7}},{"name":"isIsolatedArabicChar","generated":{"line":29,"column":9},"source":"node_modules/opentype.js/src/char.js","original":{"line":17,"column":16}},{"generated":{"line":29,"column":29},"source":"node_modules/opentype.js/src/char.js","original":{"line":17,"column":7}},{"name":"char","generated":{"line":29,"column":30},"source":"node_modules/opentype.js/src/char.js","original":{"line":17,"column":37}},{"generated":{"line":29,"column":34},"source":"node_modules/opentype.js/src/char.js","original":{"line":17,"column":7}},{"generated":{"line":29,"column":36},"source":"node_modules/opentype.js/src/char.js","original":{"line":17,"column":43}},{"generated":{"line":30,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":18,"column":4}},{"generated":{"line":30,"column":9},"source":"node_modules/opentype.js/src/char.js","original":{"line":18,"column":11}},{"name":"test","generated":{"line":30,"column":332},"source":"node_modules/opentype.js/src/char.js","original":{"line":18,"column":334}},{"generated":{"line":30,"column":336},"source":"node_modules/opentype.js/src/char.js","original":{"line":18,"column":11}},{"name":"char","generated":{"line":30,"column":337},"source":"node_modules/opentype.js/src/char.js","original":{"line":18,"column":339}},{"generated":{"line":30,"column":341},"source":"node_modules/opentype.js/src/char.js","original":{"line":18,"column":11}},{"generated":{"line":30,"column":342},"source":"node_modules/opentype.js/src/char.js","original":{"line":18,"column":4}},{"generated":{"line":31,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":19,"column":1}},{"generated":{"line":32,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":21,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":22,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":24,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":25,"column":7}},{"name":"isTashkeelArabicChar","generated":{"line":38,"column":9},"source":"node_modules/opentype.js/src/char.js","original":{"line":25,"column":16}},{"generated":{"line":38,"column":29},"source":"node_modules/opentype.js/src/char.js","original":{"line":25,"column":7}},{"name":"char","generated":{"line":38,"column":30},"source":"node_modules/opentype.js/src/char.js","original":{"line":25,"column":37}},{"generated":{"line":38,"column":34},"source":"node_modules/opentype.js/src/char.js","original":{"line":25,"column":7}},{"generated":{"line":38,"column":36},"source":"node_modules/opentype.js/src/char.js","original":{"line":25,"column":43}},{"generated":{"line":39,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":26,"column":4}},{"generated":{"line":39,"column":9},"source":"node_modules/opentype.js/src/char.js","original":{"line":26,"column":11}},{"name":"test","generated":{"line":39,"column":129},"source":"node_modules/opentype.js/src/char.js","original":{"line":26,"column":131}},{"generated":{"line":39,"column":133},"source":"node_modules/opentype.js/src/char.js","original":{"line":26,"column":11}},{"name":"char","generated":{"line":39,"column":134},"source":"node_modules/opentype.js/src/char.js","original":{"line":26,"column":136}},{"generated":{"line":39,"column":138},"source":"node_modules/opentype.js/src/char.js","original":{"line":26,"column":11}},{"generated":{"line":39,"column":139},"source":"node_modules/opentype.js/src/char.js","original":{"line":26,"column":4}},{"generated":{"line":40,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":27,"column":1}},{"generated":{"line":41,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":29,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":30,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":31,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":32,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":33,"column":7}},{"name":"isWhiteSpace","generated":{"line":47,"column":9},"source":"node_modules/opentype.js/src/char.js","original":{"line":33,"column":16}},{"generated":{"line":47,"column":21},"source":"node_modules/opentype.js/src/char.js","original":{"line":33,"column":7}},{"name":"c","generated":{"line":47,"column":22},"source":"node_modules/opentype.js/src/char.js","original":{"line":33,"column":29}},{"generated":{"line":47,"column":23},"source":"node_modules/opentype.js/src/char.js","original":{"line":33,"column":7}},{"generated":{"line":47,"column":25},"source":"node_modules/opentype.js/src/char.js","original":{"line":33,"column":32}},{"generated":{"line":48,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":34,"column":4}},{"generated":{"line":48,"column":9},"source":"node_modules/opentype.js/src/char.js","original":{"line":34,"column":11}},{"name":"test","generated":{"line":48,"column":14},"source":"node_modules/opentype.js/src/char.js","original":{"line":34,"column":16}},{"generated":{"line":48,"column":18},"source":"node_modules/opentype.js/src/char.js","original":{"line":34,"column":11}},{"name":"c","generated":{"line":48,"column":19},"source":"node_modules/opentype.js/src/char.js","original":{"line":34,"column":21}},{"generated":{"line":48,"column":20},"source":"node_modules/opentype.js/src/char.js","original":{"line":34,"column":11}},{"generated":{"line":48,"column":21},"source":"node_modules/opentype.js/src/char.js","original":{"line":34,"column":4}},{"generated":{"line":49,"column":0},"source":"node_modules/opentype.js/src/char.js","original":{"line":35,"column":1}}],"sources":{"node_modules/opentype.js/src/char.js":"// ╭─┄┄┄────────────────────────┄─────────────────────────────────────────────╮\n// ┊ Character Class Assertions ┊ Checks if a char belongs to a certain class ┊\n// ╰─╾──────────────────────────┄─────────────────────────────────────────────╯\n// jscs:disable maximumLineLength\n/**\n * Check if a char is Arabic\n * @param {string} c a single char\n */\nexport function isArabicChar(c) {\n    return /[\\u0600-\\u065F\\u066A-\\u06D2\\u06FA-\\u06FF]/.test(c);\n}\n\n/**\n * Check if a char is an isolated arabic char\n * @param {string} c a single char\n */\nexport function isIsolatedArabicChar(char) {\n    return /[\\u0630\\u0690\\u0621\\u0631\\u0661\\u0671\\u0622\\u0632\\u0672\\u0692\\u06C2\\u0623\\u0673\\u0693\\u06C3\\u0624\\u0694\\u06C4\\u0625\\u0675\\u0695\\u06C5\\u06E5\\u0676\\u0696\\u06C6\\u0627\\u0677\\u0697\\u06C7\\u0648\\u0688\\u0698\\u06C8\\u0689\\u0699\\u06C9\\u068A\\u06CA\\u066B\\u068B\\u06CB\\u068C\\u068D\\u06CD\\u06FD\\u068E\\u06EE\\u06FE\\u062F\\u068F\\u06CF\\u06EF]/.test(char);\n}\n\n/**\n * Check if a char is an Arabic Tashkeel char\n * @param {string} c a single char\n */\nexport function isTashkeelArabicChar(char) {\n    return /[\\u0600-\\u0605\\u060C-\\u060E\\u0610-\\u061B\\u061E\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED]/.test(char);\n}\n\n/**\n * Check if a char is whitespace char\n * @param {string} c a single char\n */\nexport function isWhiteSpace(c) {\n    return /\\s/.test(c);\n}\n"},"lineCount":null}},"error":null,"hash":"9b184dd055efc912310a6c74a9be12f9","cacheData":{"env":{}}}